# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2017-12-11 19:23
from __future__ import unicode_literals
import os

from django.db import migrations
THIS_DIR = os.path.dirname(os.path.abspath(__file__))
MIGRATIONS_DATA_FOLDER=os.path.join(THIS_DIR, '../migrations_data/')
WORD_SET_FILE_PATH = os.path.join(MIGRATIONS_DATA_FOLDER, 'word_sets.txt')

def load_word_sets(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    WordSet = apps.get_model("gamechannels", "WordSet")
    Word = apps.get_model("gamechannels", "Word")
    db_alias = schema_editor.connection.alias

    words = Word.objects.all()
    word_lookup = {w.word:w.id for w in words}

    numwordsets = sum(1 for line in open(WORD_SET_FILE_PATH))

    # Batch pre-create the WordSets
    wordsets = (WordSet(max_length=7) for _ in range(numwordsets))
    WordSet.objects.using(db_alias).bulk_create(wordsets)

    M2MTable = WordSet.words.through


    m2m_rows_to_create = []
    
    with open(WORD_SET_FILE_PATH) as word_sets_file:
        created_wordsets = WordSet.objects.all()
        
        for (wordset, line) in zip(created_wordsets, word_sets_file):
            words = line.split('::')[1].split(',')
            words = [w.strip().lower() for w in words]
            word_ids = [word_lookup[w] for w in words]
            for wid in word_ids:
                m2m_rows_to_create.append(M2MTable(word_id=wid, wordset_id=wordset.id))
    
    M2MTable.objects.using(db_alias).bulk_create(m2m_rows_to_create)

def unload_word_sets(apps, schema_editor):
    pass

class Migration(migrations.Migration):

    dependencies = [
        ('gamechannels', '0003_auto_20171211_2103'),
    ]

    operations = [
        migrations.RunPython(load_word_sets, unload_word_sets),
    ]
